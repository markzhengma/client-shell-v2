{"version":3,"sources":["Components/Header.jsx","Components/Footer.jsx","Components/Login.jsx","Components/UserSingle.jsx","Components/UserUpdate.jsx","Components/RecordList.jsx","Components/FindUser.jsx","Components/NewUser.jsx","Components/RecordBrowser.jsx","Components/RecentRecord.jsx","Components/Admin.jsx","App.js","registerServiceWorker.js","index.js"],"names":["Header","props","state","admin_name","admin_pass","Navbar","sticky","className","Component","Footer","href","target","Login","handleAdminLogin","e","preventDefault","alert","axios","get","then","res","data","code","setAdmin","handlePageChange","catch","err","console","log","value","type","checked","name","this","setState","Form","onSubmit","bind","Group","Label","Control","onChange","handleChange","placeholder","Button","variant","UserSingle","filter","Card","Body","Title","userData","user_name","Text","record_num","phone","plate","make","detail","UserUpdate","user_input","confirmUserUpdate","defaultValue","handleUserUpdateChange","disabled","as","rows","ButtonGroup","style","width","onClick","cancelUserUpdate","RecordList","newRecord","date","product_name","milage","gift","operator","reminder","updateRecord","selectUpdateId","currDate","randomKey","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","Math","random","url","method","JSON","stringify","resetNewRecordForm","resetInput","handleFindUserSubmit","id","delete","_id","resetUpdateRecord","recordListData","handleNewRecordSubmit","key","Row","Col","maxWidth","handleNewRecordChange","productData","map","product","product_type","giftData","gift_name","operatorData","location","op_name","margin","Table","striped","bordered","hover","backgroundColor","color","record","selectUpdateRecord","handleDeleteRecord","handleUpdateRecordChange","confirmUpdateRecord","FindUser","userListData","isUserUpdating","updateUser","window","confirm","resetStates","userList","findUserRecords","user","records","bg","text","border","selectUserUpdate","confirmUserDelete","NewUser","isManual","admin","location_char","changeAction","Check","changeManualState","label","handleNewUserSubmit","RecordBrowser","goToTargetRecord","RecentRecord","start","end","currMonth","currDay","currYear","findRecordListBetweenDates","Admin","action","getGiftData","getOperatorData","getProductData","App","page","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e0955faa.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Navbar } from 'react-bootstrap';\n\nclass Header extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      admin_name: '',\n      admin_pass: ''\n    }\n  };\n\n  render() {\n    return (\n      <Navbar sticky = \"top\" className = \"header\">\n        <div className = \"logo\"></div>\n        <h1>壳牌润滑油</h1>\n      </Navbar>\n    )\n  }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport { Navbar } from 'react-bootstrap';\n\nclass Footer extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      admin_name: '',\n      admin_pass: ''\n    }\n  };\n\n  render() {\n    return (\n      <Navbar sticky = \"bottom\" className = \"footer\">\n        <div className = \"footer-info\">\n          <h5>呼伦贝尔市佳润物资有限公司</h5>\n          <p>0470-8223779</p>\n        </div>\n        <div className = \"footer-legal\">\n          <a href = \"http://beian.miit.gov.cn\" target=\"_blank\">蒙ICP备19005903号-1</a>\n        </div>\n      </Navbar>\n    )\n  }\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Button, Form } from 'react-bootstrap';\n\nclass Login extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      admin_name: '',\n      admin_pass: ''\n    }\n  };\n\n  handleChange(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    })\n  };\n\n  handleAdminLogin = (e) => {\n    e.preventDefault();\n    if(this.state.admin_name === \"\" || this.state.admin_pass === \"\") {\n      alert('请输入管理员账号和密码');\n    } else {\n      axios.get(`https://api.hailarshell.cn/api/admin/login?admin=${this.state.admin_name}&pass=${this.state.admin_pass}`)\n        .then(res => {\n          if(res.data.code !== 200){\n            if(res.data.code === 422){\n              alert('输入格式有误')\n            } else {\n              alert('请再次检查账号和密码')\n            }\n          } else {\n            this.props.setAdmin(res.data.data);\n            this.props.handlePageChange('admin');\n          }\n        })\n        .catch(err => {\n          console.log(err);\n        })\n    }\n  };\n\n  render() {\n    return (\n      <div className = \"login\">\n        <Form className = \"login-form\" onSubmit = {this.handleAdminLogin.bind(this)}>\n          <Form.Group>\n            <Form.Label>管理员账号</Form.Label>\n            <Form.Control name = \"admin_name\" value = {this.state.admin_name} onChange = {this.handleChange.bind(this)} type=\"text\" placeholder=\"管理员账号\" />\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>管理员密码</Form.Label>\n            <Form.Control name = \"admin_pass\" value = {this.state.admin_pass} onChange = {this.handleChange.bind(this)} type=\"password\" placeholder=\"管理员密码\" />\n          </Form.Group>\n\n          <Button variant=\"success\" type = \"submit\">登录</Button>\n        </Form>\n      </div>\n    )\n  }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport { Card } from 'react-bootstrap';\n\nclass UserSingle extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      filter: 'record_num',\n      value: '',\n      data: {}\n    }\n  };\n\n  handleChange(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    })\n  };\n\n  render() {\n    return (\n          <Card.Body>\n            <Card.Header>\n              <Card.Title className = \"text-warning\">\n                {this.props.userData.user_name || ''}\n              </Card.Title>\n            </Card.Header>\n            <Card.Text className=\"mb-2 text-warning\">\n              换油证号\n            </Card.Text>\n            <Card.Text>\n              {this.props.userData.record_num || ''}\n            </Card.Text>\n            <Card.Text className=\"mb-2 text-warning\">\n              联系方式\n            </Card.Text>\n            <Card.Text>\n              {this.props.userData.phone || ''}\n            </Card.Text>\n            <Card.Text className=\"mb-2 text-warning\">\n              车牌号\n            </Card.Text>\n            <Card.Text>\n              {this.props.userData.plate || ''}\n            </Card.Text>\n            <Card.Text className=\"mb-2 text-warning\">\n              车型\n            </Card.Text>\n            <Card.Text>\n              {this.props.userData.make || ''}\n            </Card.Text>\n            <Card.Text className=\"mb-2 text-warning\">\n              备注\n            </Card.Text>\n            <Card.Text>\n              {this.props.userData.detail || ''}\n            </Card.Text>\n          </Card.Body>\n    )\n  }\n}\n\nexport default UserSingle;","import React, { Component } from 'react';\nimport { Form, Button, ButtonGroup } from 'react-bootstrap';\n\nclass UserUpdate extends Component {\n  constructor(){\n    super();\n    this.state = {\n      filter: 'record_num',\n      value: '',\n      // user_input: {\n      //   user_name: '',\n      //   phone: '',\n      //   plate: '',\n      //   make: '',\n      //   detail: '',\n      // }\n    };\n  };\n\n  componentWillMount(){\n    this.setState({\n      user_input: {\n        user_name: this.props.userData.user_name,\n        phone: this.props.userData.phone,\n        plate: this.props.userData.plate,\n        make: this.props.userData.make,\n        detail: this.props.userData.detail,\n      }\n    })\n  }\n\n  // handleUserUpdateChange(e) {\n  //   const target = e.target;\n  //   const value = target.type === 'checkbox' ? target.checked : target.value;\n  //   const name = target.name;\n  //   this.setState({\n  //     user_input: {\n  //       ...this.state.user_input,\n  //       [name]: value\n  //     }\n  //   })\n  // };\n\n  render() {\n    return (\n      <Form onSubmit = {(e) => this.props.confirmUserUpdate(e)}>\n        <Form.Group>\n        <Form.Label>车主姓名</Form.Label>\n          <Form.Control name = \"user_name\" defaultValue = {this.props.userData.user_name} onChange = {this.props.handleUserUpdateChange.bind(this)} />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>换油证号</Form.Label>\n          <Form.Control value = {this.props.userData.record_num} disabled></Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>联系方式</Form.Label>\n          <Form.Control name = \"phone\" defaultValue = {this.props.userData.phone} onChange = {this.props.handleUserUpdateChange.bind(this)}></Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>车牌号</Form.Label>\n          <Form.Control name = \"plate\" defaultValue = {this.props.userData.plate} onChange = {this.props.handleUserUpdateChange.bind(this)}></Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>车型</Form.Label>\n          <Form.Control name = \"make\" defaultValue = {this.props.userData.make} onChange = {this.props.handleUserUpdateChange.bind(this)}></Form.Control>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>备注</Form.Label>\n          <Form.Control as=\"textarea\" rows=\"3\" name = \"detail\" defaultValue = {this.props.userData.detail} onChange = {this.props.handleUserUpdateChange.bind(this)}></Form.Control>\n        </Form.Group>\n        <ButtonGroup style = {{ width: '100%' }}>\n          <Button variant=\"success\" type = \"submit\">保存</Button>\n          <Button variant=\"warning\" onClick = {this.props.cancelUserUpdate}>取消</Button>\n        </ButtonGroup>\n      </Form>\n    )\n  }\n}\n\nexport default UserUpdate;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Table, Form, Row, Col, Button } from 'react-bootstrap';\n\nclass RecordList extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      newRecord: {\n        date: '',\n        product_name: '',\n        milage: '',\n        gift: '',\n        operator: '',\n        detail: '无',\n        reminder: '无'\n      },\n      updateRecord: {\n        date: '',\n        product_name: '',\n        milage: '',\n        gift: '',\n        operator: '',\n        detail: '',\n        reminder: ''\n      },\n      selectUpdateId: '',\n      currDate: '',\n      randomKey: 0\n    }\n  };\n\n  componentDidMount(){\n    var d = new Date(),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n    this.setState({\n      currDate: [year, month, day].join('-'),\n      newRecord: {\n        ...this.state.newRecord,\n        date: [year, month, day].join('-')\n      }\n    });\n  }\n\n  resetInput(){\n    this.setState({\n      newRecord: {\n        date: this.state.currDate,\n        product_name: '',\n        milage: '',\n        gift: '',\n        operator: '',\n        detail: '无',\n        reminder: '无'\n      }\n    })\n  };\n\n  handleNewRecordChange(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      newRecord: {\n        ...this.state.newRecord,\n        [name]: value\n      }\n    })\n  };\n\n  handleUpdateRecordChange(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      updateRecord: {\n        ...this.state.updateRecord,\n        [name]: value\n      }\n    })\n  }\n\n  resetNewRecordForm(){\n    this.setState({ randomKey: Math.random() });\n  }\n\n  handleNewRecordSubmit(e){\n    e.preventDefault();\n    if(this.state.newRecord.date === \"\" || this.state.newRecord.gift === \"\" || this.state.newRecord.milage === \"\" || this.state.newRecord.operator === \"\" || this.state.newRecord.product_name === \"\" || this.state.newRecord.detail === \"\" || this.state.newRecord.reminder === \"\") {\n      alert(\"亲，请将保养记录填写完整哟~\");\n    } else {\n      const record_num = this.props.record_num;\n      axios({\n        url: `https://api.hailarshell.cn/api/record/user/${record_num}`,\n        method: 'POST',\n        data: {\n          date: this.state.newRecord.date,\n          gift: this.state.newRecord.gift,\n          milage: this.state.newRecord.milage,\n          operator: this.state.newRecord.operator,\n          product_name: this.state.newRecord.product_name,\n          detail: this.state.newRecord.detail,\n          reminder: this.state.newRecord.reminder\n        }\n      })\n        .then(res => {\n          if(res.data.code !== 200){\n            alert(res.data.code + '\\n' + JSON.stringify(res.data.data));\n            console.log(res.data.data);\n          } else {\n            console.log(res)\n            this.resetNewRecordForm();\n            this.resetInput();\n            this.props.handleFindUserSubmit(e)\n          }\n        })\n        .catch(err => {\n          alert(err);\n          console.log(err);\n        })\n    }\n  };\n\n  handleDeleteRecord(e, id){\n    axios.delete(`https://api.hailarshell.cn/api/record/single/${id}`)\n      .then(res => {\n        if(res.data.code !== 200){\n          alert(res.data.code + '\\n' + JSON.stringify(res.data.data));\n          console.log(res.data.data);\n        } else {\n          console.log(res)\n          this.props.handleFindUserSubmit(e)\n        }\n      })\n      .catch(err => {\n        alert(err);\n        console.log(err);\n      })\n  };\n\n  selectUpdateRecord(data){\n    this.setState({\n      updateRecord: {\n        date: data.date,\n        product_name: data.product_name,\n        milage: data.milage,\n        gift: data.gift,\n        operator: data.operator,\n        detail: data.detail,\n        reminder: data.reminder\n      },\n      selectUpdateId: data._id\n    })\n  };\n\n  confirmUpdateRecord(e){\n    e.preventDefault();\n    axios({\n      url: `https://api.hailarshell.cn/api/record/single/${this.state.selectUpdateId}`,\n      method: 'PUT',\n      data: this.state.updateRecord\n    })\n      .then(res => {\n        if(res.data.code === 200){\n          this.resetUpdateRecord();\n          this.props.handleFindUserSubmit(e);\n        }\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  };\n\n  resetUpdateRecord(){\n    this.setState({\n      updateRecord: {\n        date: '',\n        product_name: '',\n        milage: '',\n        gift: '',\n        operator: '',\n        detail: '',\n        reminder: ''\n      },\n      selectUpdateId: ''\n    })\n  };\n\n  render() {\n    const data = this.props.recordListData;\n    return (\n      <div className = \"record-list\">\n        <div>\n          <h5>新保养记录</h5>\n          <Form className = \"new-record-form\" onSubmit = {this.handleNewRecordSubmit.bind(this)} key={this.state.randomKey}>\n            <Row>\n              <Col style = {{ maxWidth: '200px' }}>\n                <Form.Group>\n                  <Form.Label>日期</Form.Label>\n                  <Form.Control type=\"date\" name = \"date\" value = {this.state.newRecord.date} onChange = {this.handleNewRecordChange.bind(this)} placeholder = \"日期\"></Form.Control>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group>\n                  <Form.Label>项目名称</Form.Label>\n                  <Form.Control as=\"select\" name = \"product_name\" defaultValue = \"\" onChange = {this.handleNewRecordChange.bind(this)}>\n                    <option value = \"\" disabled>【请选择】</option>\n                    <option value = \"\" disabled>【汽机油】</option>\n                    {this.props.productData.map(product => {\n                      if(product.product_type === '汽机油')\n                      return <option value = {product.product_name} key = {product._id}>{product.product_name}</option>\n                    })}\n                    <option value = \"\" disabled>【柴机油】</option>\n                    {this.props.productData.map(product => {\n                      if(product.product_type === '柴机油')\n                      return <option value = {product.product_name} key = {product._id}>{product.product_name}</option>\n                    })}\n                    <option value = \"\" disabled>【中华产品】</option>\n                    {this.props.productData.map(product => {\n                      if(product.product_type === '中华产品')\n                      return <option value = {product.product_name} key = {product._id}>{product.product_name}</option>\n                    })}\n                    <option value = \"\" disabled>【附属品】</option>\n                    {this.props.productData.map(product => {\n                      if(product.product_type === '附属品')\n                      return <option value = {product.product_name} key = {product._id}>{product.product_name}</option>\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group>\n                  <Form.Label>表示里程</Form.Label>\n                  <Form.Control name = \"milage\" onChange = {this.handleNewRecordChange.bind(this)} placeholder = \"表示里程\"></Form.Control>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group>\n                  <Form.Label>赠品情况</Form.Label>\n                  <Form.Control as=\"select\" name = \"gift\" defaultValue = \"\" onChange = {this.handleNewRecordChange.bind(this)}>\n                    <option value = \"\" disabled>【请选择】</option>\n                    <option value = \"(赠品未领)\">(赠品未领)</option>\n                    {this.props.giftData.map(gift => {\n                      if(gift.gift_name !== \"(赠品未领)\")\n                      return <option value = {gift.gift_name} key = {gift._id}>{gift.gift_name}</option>\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group>\n                  <Form.Label>操作人</Form.Label>\n                  <Form.Control as=\"select\" name = \"operator\" defaultValue = \"\" onChange = {this.handleNewRecordChange.bind(this)}>\n                    <option value = \"\" disabled>【请选择】</option>\n                    <option value = \"\" disabled>【海拉尔】</option>\n                    {this.props.operatorData.map(operator => {\n                      if(operator.location === '海拉尔')\n                      return <option value = {operator.op_name} key = {operator._id}>{operator.op_name}</option>\n                    })}\n                    <option value = \"\" disabled>【满洲里】</option>\n                    {this.props.operatorData.map(operator => {\n                      if(operator.location === '满洲里')\n                      return <option value = {operator.op_name} key = {operator._id}>{operator.op_name}</option>\n                    })}\n                    <option value = \"\" disabled>【牙克石】</option>\n                    {this.props.operatorData.map(operator => {\n                      if(operator.location === '牙克石')\n                      return <option value = {operator.op_name} key = {operator._id}>{operator.op_name}</option>\n                    })}\n                  </Form.Control>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group>\n                  <Form.Label>积分/备注</Form.Label>\n                  <Form.Control name = \"detail\" value = {this.state.newRecord.detail} onChange = {this.handleNewRecordChange.bind(this)} placeholder = \"积分/备注\"></Form.Control>\n                </Form.Group>\n              </Col>\n              <Col>\n                <Form.Group>\n                  <Form.Label>保养提醒</Form.Label>\n                  <Form.Control name = \"reminder\" value = {this.state.newRecord.reminder} onChange = {this.handleNewRecordChange.bind(this)} placeholder = \"保养提醒\"></Form.Control>\n                </Form.Group>\n              </Col>\n              <Col>\n                <div style = {{ margin: '0 0 8px 0' }}>操作</div>\n                <Button variant=\"success\" style = {{ margin: '5px' }} type = \"submit\">保存</Button>\n                <Button variant=\"warning\" style = {{ margin: '5px' }} onClick = {this.resetNewRecordForm.bind(this)}>重置</Button>\n              </Col>\n            </Row>\n          </Form>\n        </div>\n        {data.length > 0 ? \n          <div>\n          <h5>保养记录历史</h5>\n          <Table striped bordered hover style = {{ backgroundColor: 'grey', color: 'white' }}>\n            <thead>\n              <tr>\n                <th>日期</th>\n                <th>项目名称</th>\n                <th>表示里程</th>\n                <th>赠品情况</th>\n                <th>操作人</th>\n                <th>积分/备注</th>\n                <th>保养提醒</th>\n                <th>操作</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.map(record => {\n                return (\n                  this.state.selectUpdateId !== record._id ? \n                    <tr key = {record._id} id = {record._id}>\n                      <td className = \"record-list-column\">{record.date}</td>\n                      <td className = \"record-list-column\">{record.product_name}</td>\n                      <td className = \"record-list-column\">{record.milage}</td>\n                      <td className = \"record-list-column\">{record.gift}</td>\n                      <td className = \"record-list-column\">{record.operator}</td>\n                      <td className = \"record-list-column\">{record.detail}</td>\n                      <td className = \"record-list-column\">{record.reminder}</td>\n                      <td className = \"record-list-column\">\n                        <Button variant = \"primary\" onClick = {(e) => this.selectUpdateRecord(record)}>编辑</Button>\n                        <Button variant = \"danger\" onClick = {(e) => this.handleDeleteRecord(e, record._id)}>删除</Button>\n                      </td>\n                    </tr>\n                  :\n                  <tr key = {record._id} id = {record._id}>\n                    <td className = \"record-list-column\"><input className = \"edit-input\" type = \"date\" defaultValue = {record.date} name = \"date\" onChange = {this.handleUpdateRecordChange.bind(this)}/></td>\n                    {/* <td className = \"record-list-column\"><input defaultValue = {record.product_name} name = \"product_name\" onChange = {this.handleUpdateRecordChange.bind(this)}/></td> */}\n                    <td className = \"record-list-column\">\n                      <select className = \"edit-select\" name = \"product_name\" defaultValue = {record.product_name} onChange = {this.handleUpdateRecordChange.bind(this)}>\n                        {/* <option value = {record.product_name} selected>{record.product_name}</option> */}\n                        <option value = \"\" disabled>【项目名称】</option>\n                        <option value = \"\" disabled>【汽机油】</option>\n                        {this.props.productData.map(product => {\n                          if(product.product_type === '汽机油')\n                          return <option value = {product.product_name} key = {product._id}>{product.product_name}</option>\n                        })}\n                        <option value = \"\" disabled>【柴机油】</option>\n                        {this.props.productData.map(product => {\n                          if(product.product_type === '柴机油')\n                          return <option value = {product.product_name} key = {product._id}>{product.product_name}</option>\n                        })}\n                        <option value = \"\" disabled>【中华产品】</option>\n                        {this.props.productData.map(product => {\n                          if(product.product_type === '中华产品')\n                          return <option value = {product.product_name} key = {product._id}>{product.product_name}</option>\n                        })}\n                        <option value = \"\" disabled>【附属品】</option>\n                        {this.props.productData.map(product => {\n                          if(product.product_type === '附属品')\n                          return <option value = {product.product_name} key = {product._id}>{product.product_name}</option>\n                        })}\n                        \n                      </select>\n                    </td>\n                    <td className = \"record-list-column\"><input className = \"edit-input\" defaultValue = {record.milage} name = \"milage\" onChange = {this.handleUpdateRecordChange.bind(this)}/></td>\n                    {/* <td className = \"record-list-column\"><input defaultValue = {record.gift} name = \"gift\" onChange = {this.handleUpdateRecordChange.bind(this)}/></td> */}\n                    <td className = \"record-list-column\">\n                      <select className = \"edit-select\" name = \"gift\" defaultValue = {record.gift} onChange = {this.handleUpdateRecordChange.bind(this)}>\n                        {/* <option value = {record.gift} selected>{record.gift}</option> */}\n                        <option value = \"\" disabled>【赠品情况】</option>\n                        <option value = \"(赠品未领)\">(赠品未领)</option>\n                        {this.props.giftData.map(gift => {\n                          if(gift.gift_name !== \"(赠品未领)\")\n                          return <option value = {gift.gift_name} key = {gift._id}>{gift.gift_name}</option>\n                        })}\n                      </select>\n                    </td>\n                    {/* <td className = \"record-list-column\"><input defaultValue = {record.operator} name = \"operator\" onChange = {this.handleUpdateRecordChange.bind(this)}/></td> */}\n                    <td className = \"record-list-column\">\n                      <select className = \"edit-select\" name = \"operator\" defaultValue = {record.operator} onChange = {this.handleUpdateRecordChange.bind(this)}>\n                        {/* <option value = {record.operator} selected>{record.operator}</option> */}\n                        <option value = \"\" disabled>【操作人】</option>\n                        <option value = \"\" disabled>【海拉尔】</option>\n                        {this.props.operatorData.map(operator => {\n                          if(operator.location === '海拉尔')\n                          return <option value = {operator.op_name} key = {operator._id}>{operator.op_name}</option>\n                        })}\n                        <option value = \"\" disabled>【满洲里】</option>\n                        {this.props.operatorData.map(operator => {\n                          if(operator.location === '满洲里')\n                          return <option value = {operator.op_name} key = {operator._id}>{operator.op_name}</option>\n                        })}\n                        <option value = \"\" disabled>【牙克石】</option>\n                        {this.props.operatorData.map(operator => {\n                          if(operator.location === '牙克石')\n                          return <option value = {operator.op_name} key = {operator._id}>{operator.op_name}</option>\n                        })}\n                      </select>\n                    </td>\n                    <td className = \"record-list-column\"><input defaultValue = {record.detail} name = \"detail\" onChange = {this.handleUpdateRecordChange.bind(this)}/></td>\n                    <td className = \"record-list-column\"><input defaultValue = {record.reminder} name = \"reminder\" onChange = {this.handleUpdateRecordChange.bind(this)}/></td>\n                    <td className = \"record-list-column\">\n                      <Button variant = \"success\" onClick = {(e) => this.confirmUpdateRecord(e)}>保存</Button>\n                      <Button variant = \"warning\" onClick = {this.resetUpdateRecord.bind(this)}>取消</Button>\n                    </td>\n                  </tr>\n                )\n              })}\n            </tbody>\n          </Table>\n        </div>\n        : \"\"}\n        \n      </div>\n    )\n  }\n}\n\nexport default RecordList;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Card, CardGroup, Form, Button, ButtonGroup } from 'react-bootstrap'; \n\nimport UserSingle from './UserSingle';\nimport UserUpdate from './UserUpdate';\nimport RecordList from './RecordList';\n\nclass FindUser extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      filter: 'record_num',\n      value: '',\n      userListData: '',\n      userData: '',\n      recordListData: '',\n      isUserUpdating: '',\n      updateUser: {\n        user_name: '',\n        phone: '',\n        plate: '',\n        make: '',\n        detail: '',\n      }\n    }\n  };\n\n  handleChange(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    })\n  };\n\n  handleUserUpdateChange(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      updateUser: {\n        ...this.state.updateUser,\n        [name]: value\n      }\n    })\n  };\n\n  resetStates(){\n    this.setState({\n      filter: 'record_num',\n      value: '',\n      userData: '',\n      recordListData: '',\n      userListData: ''\n    })\n  };\n\n  changeUserUpdateStatus() {\n    this.setState({\n      isUserUpdating: !this.state.isUserUpdating\n    })\n  };\n\n  selectUserUpdate(){\n    this.setState({\n      isUserUpdating: true,\n      updateUser: this.state.userData\n    })\n  };\n\n  cancelUserUpdate(){\n    this.setState({\n      isUserUpdating: false,\n      updateUser: {\n        user_name: '',\n        phone: '',\n        plate: '',\n        make: '',\n        detail: '',\n      }\n    })\n  }\n\n  confirmUserUpdate(e) {\n    e.preventDefault();\n    console.log(this.state.updateUser);\n    axios({\n      url: `https://api.hailarshell.cn/api/user/single/${this.state.userData.record_num}`,\n      method: 'PUT',\n      data: {\n        make: this.state.updateUser.make,\n        phone: this.state.updateUser.phone,\n        plate: this.state.updateUser.plate,\n        user_name: this.state.updateUser.user_name,\n        detail: this.state.updateUser.detail,\n      }\n    })\n      .then(res => {\n        if(res.data.code === 200){\n          this.cancelUserUpdate();\n          this.handleFindUserSubmit(e);\n        }\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  };\n\n  confirmUserDelete() {\n    let confirm = window.confirm(`确定删除用户${this.state.userData.user_name}？`);\n    if(confirm){\n      axios.delete(`https://api.hailarshell.cn/api/user/single/${this.state.userData.record_num}`)\n        .then(res => {\n          if(res.data.code !== 200){\n            alert(res.data.code + '\\n' + JSON.stringify(res.data.data))\n          } else {\n            this.resetStates();\n          }\n        })\n        .catch(err => {\n          alert(err);\n          console.log(err)\n        })\n    }\n  }\n\n  handleFindUserSubmit(e) {\n    e.preventDefault();\n    axios.get(`https://api.hailarshell.cn/api/user/all?filter=${this.state.filter}&value=${this.state.value}`)\n      .then(userList => {\n        if(userList.data.code !== 200) {\n          alert(userList.data.code + '\\n' + JSON.stringify(userList.data.data));\n        } else {\n          if(userList.data.data.length === 0){\n            alert('未找到用户~');\n          } else if(userList.data.data.length > 1){\n            this.setState({\n              userData: '',\n              recordListData: '',\n              userListData: userList.data.data\n            });\n          } else {\n            this.setState({\n              userListData: ''\n            })\n            this.findUserRecords(userList.data.data[0].record_num);\n          }\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  findUserRecords(record_num) {\n    axios.get(`https://api.hailarshell.cn/api/user/single?filter=record_num&value=${record_num}`)\n      .then(user => {\n        if(user.data.code !== 200){\n          alert(user.data.code + '\\n' + JSON.stringify(user.data.data))\n        } else {\n          this.setState({\n            userData: user.data.data\n          });\n          const record_num = user.data.data.record_num;\n          axios.get(`https://api.hailarshell.cn/api/record/user/${record_num}`)\n            .then(records => {\n              if(records.data.code !== 200){\n                alert(records.data);\n                console.log(records.data)\n              } else {\n                this.setState({\n                  recordListData: records.data.data\n                })\n              }\n            })\n            .catch(err => {\n              alert(err);\n              console.log(err);\n            })\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  render() {\n    return (\n      <div>\n        <Form className = \"search-form\" onSubmit = {this.handleFindUserSubmit.bind(this)}>\n          <Form.Group>\n            <Form.Label>查询条件</Form.Label>\n            <Form.Control as=\"select\" name = \"filter\" value = {this.state.filter} onChange = {this.handleChange.bind(this)}>\n              <option value = \"record_num\">按换油证号查找</option>\n              <option value = \"phone\">按手机号查找</option>\n              <option value = \"plate\">按车牌号查找</option>\n            </Form.Control>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>查询内容</Form.Label>\n            <Form.Control type = \"text\" name = \"value\" value = {this.state.value} onChange = {this.handleChange.bind(this)} placeholder = \"内容\" />\n          </Form.Group>\n          <Button variant=\"success\" type = \"submit\">查找</Button>\n        </Form>\n        {this.state.userListData !== '' ? \n          <div style = {{ margin: '20px' }}>\n            <h5>找到多个用户，请选择要查看的用户。</h5>\n            <div className = \"user-list\">\n              { this.state.userListData.map(user => {\n                return (\n                  <Card className = \"user-list-single\" bg=\"secondary\" text=\"white\"  key = {user._id}>\n                    <Card.Title className=\"mb-2 text-warning\">\n                      {user.user_name}\n                    </Card.Title>\n                    <Card.Text>\n                      换油证号: {user.record_num || ''}\n                    </Card.Text>\n                    <Button variant=\"primary\" style = {{ margin: '10px' }} onClick = {() => this.findUserRecords(user.record_num)}>查看</Button>\n                  </Card>\n                )\n              })}\n            </div>\n          </div>\n        : \"\"}\n        {this.state.userData !== '' ? this.state.isUserUpdating ? \n          <Card bg=\"secondary\" text=\"white\" border=\"light\" className = \"user-form\">\n            <UserUpdate \n              userData = {this.state.userData} \n              cancelUserUpdate = {this.cancelUserUpdate.bind(this)}\n              confirmUserUpdate = {this.confirmUserUpdate.bind(this)}\n              handleUserUpdateChange = {this.handleUserUpdateChange.bind(this)}\n            />\n          </Card>\n        :\n          <div>\n            <Card bg=\"secondary\" text=\"white\" border=\"light\" className = \"user-single\">\n              <UserSingle userData = {this.state.userData}/>\n              <ButtonGroup style = {{ margin: '10px' }}>\n                <Button variant=\"primary\" onClick = {this.selectUserUpdate.bind(this)}>编辑客户信息</Button>\n                <Button variant=\"danger\" onClick = {this.confirmUserDelete.bind(this)}>删除客户信息</Button>\n              </ButtonGroup>\n            </Card>\n          </div>\n        : \"\"}\n        {this.state.userData !== '' ? \n          <RecordList \n            productData = {this.props.productData}\n            giftData = {this.props.giftData}\n            operatorData = {this.props.operatorData}\n            recordListData = {this.state.recordListData}\n            record_num = {this.state.userData.record_num}\n            handleFindUserSubmit = {this.handleFindUserSubmit.bind(this)}\n          />\n        : \"\"}\n      </div>\n    )\n  }\n}\n\nexport default FindUser;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport UserSingle from './UserSingle';\nimport { Form, Button, Card } from 'react-bootstrap';\n\nclass NewUser extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      isManual: false,\n      userData: '',\n      user_name: '',\n      record_num: '',\n      phone: '',\n      plate: '',\n      make: ''\n    }\n  };\n\n  handleChange(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    })\n  };\n\n  changeManualState() {\n    this.setState({\n      isManual: !this.state.isManual\n    })\n  }\n\n  handleNewUserSubmit(e) {\n    e.preventDefault();\n    let confirmed = window.confirm(`请核对新用户信息：\\n客户姓名：${this.state.user_name}\\n换油证号：${this.state.isManual ? this.state.record_num : '自动生成 - ' + this.props.admin.location}\\n联系方式：${this.state.phone}\\n车型：${this.state.make}\\n车牌号：${this.state.plate}`);\n    if(confirmed){\n      axios({\n        url: `https://api.hailarshell.cn/api/user/single${this.state.isManual ? '' : '/' + this.props.admin.location_char}`,\n        method: 'POST',\n        data: {\n          make: this.state.make,\n          phone: this.state.phone,\n          plate: this.state.plate,\n          record_num: this.state.record_num,\n          user_name: this.state.user_name,\n        }\n      })\n        .then(res => {\n          if(res.data.code !== 200){\n            alert(res.data.code + '\\n' + JSON.stringify(res.data.data))\n          } else {\n            this.setState({\n              userData: res.data.data\n            });\n          }\n        })\n        .catch(err => {\n          alert(err);\n        })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.userData !== '' ? \n        <div>\n          <h3>新用户：</h3>\n          <Card bg=\"secondary\" text=\"white\" border=\"light\" className = \"user-single\">\n            <UserSingle userData = {this.state.userData}/>\n          </Card>\n          <h5>请返回<Button variant = \"secondary\" onClick = {() => this.props.changeAction('find_user')}>查找老用户</Button>来查找该用户，并添加保养记录。</h5>\n        </div>\n        : \n        <Form className = \"user-form\">\n          <Form.Label>\n            客户姓名：\n          </Form.Label>\n          <Form.Control type = \"text\" name = \"user_name\" onChange = {this.handleChange.bind(this)} value = {this.state.user_name}></Form.Control>\n          <Form.Label>\n            换油证号：{this.props.admin.location}门店\n          </Form.Label>\n          <Form.Check onChange = {this.changeManualState.bind(this)} type=\"checkbox\" label=\"手动输入门店换油证号\" />\n          <Form.Control type = \"text\" name = \"record_num\" onChange = {this.handleChange.bind(this)} value = {this.state.record_num} disabled = {this.state.isManual ? \"\" : \"disabled\"}></Form.Control>\n          <Form.Label>\n            联系方式：\n          </Form.Label>\n          <Form.Control type = \"text\" name = \"phone\" onChange = {this.handleChange.bind(this)} value = {this.state.phone}></Form.Control>\n          <Form.Label>\n            车牌号：\n          </Form.Label>\n          <Form.Control type = \"text\" name = \"plate\" onChange = {this.handleChange.bind(this)} value = {this.state.plate}></Form.Control>\n          <Form.Label>\n            车型：\n          </Form.Label>\n          <Form.Control type = \"text\" name = \"make\" onChange = {this.handleChange.bind(this)} value = {this.state.make}></Form.Control>\n          <Button variant = \"info\" onClick = {this.handleNewUserSubmit.bind(this)}>创建</Button>\n        </Form>\n        }\n        \n      </div>\n    )\n  }\n}\n\nexport default NewUser;","import React, { Component } from 'react';\nimport { Table, Button } from 'react-bootstrap';\n\nclass RecordBrowser extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n    }\n  };\n\n  goToTargetRecord() {\n    alert('跳转功能敬请期待~')\n  }\n\n  render() {\n    const data = this.props.recordListData;\n    return (\n      <div className = \"record-list\">\n        <Table striped bordered hover style = {{ backgroundColor: 'grey', color: 'white' }}>\n          <thead>\n            <tr>\n              <th>日期</th>\n              <th>项目名称</th>\n              <th>表示里程</th>\n              <th>赠品情况</th>\n              <th>操作人</th>\n              <th>积分/备注</th>\n              <th>保养提醒</th>\n              <th>换油证号</th>\n              <th>操作</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data.map(record => {\n              return (\n                  <tr key = {record._id} id = {record._id}>\n                    <td className = \"record-list-column\">{record.date}</td>\n                    <td className = \"record-list-column\">{record.product_name}</td>\n                    <td className = \"record-list-column\">{record.milage}</td>\n                    <td className = \"record-list-column\">{record.gift}</td>\n                    <td className = \"record-list-column\">{record.operator}</td>\n                    <td className = \"record-list-column\">{record.detail}</td>\n                    <td className = \"record-list-column\">{record.reminder}</td>\n                    <td className = \"record-list-column\">{record.record_num}</td>\n                    <td className = \"record-list-column\">\n                      <Button variant = \"primary\" onClick = {this.goToTargetRecord.bind(this)}>查看</Button>\n                    </td>\n                  </tr>\n              )\n            })}\n          </tbody>\n        </Table>\n      </div>\n      )\n    }\n  }\n  \n  export default RecordBrowser;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Button, Form } from 'react-bootstrap';\nimport RecordBrowser from './RecordBrowser';\n\nclass RecentRecord extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      location_char: '',\n      start: '',\n      end: '',\n      recordListData: ''\n    }\n  };\n\n  componentDidMount(){\n    let currDate = new Date(),\n        currMonth = '' + (currDate.getMonth() + 1),\n        currDay = '' + currDate.getDate(),\n        currYear = currDate.getFullYear();\n\n    if (currMonth.length < 2) \n        currMonth = '0' + currMonth;\n    if (currDay.length < 2) \n        currDay = '0' + currDay;\n    \n    const date = [currYear, currMonth, currDay].join('-');\n\n    this.findRecordListBetweenDates(this.props.admin.location_char, '2020-01-01', date);\n\n    this.setState({\n      start: '2020-01-01',\n      end: date,\n      location_char: this.props.admin.location_char\n    });\n  };\n\n  findRecordListBetweenDates(location_char, start, end){\n    axios.get(`https://api.hailarshell.cn/api/record/period/${location_char}?start=${start}&end=${end}`)\n      .then(res => {\n        if(res.data.code !== 200) {\n          console.log(res.data);\n          alert(res.data.code + '\\n' + JSON.stringify(res.data.data));\n        } else {\n          this.setState({\n            recordListData: res.data.data\n          })\n        }\n      })\n      .catch(err => {\n        alert(err);\n        console.log(err);\n      })\n  }\n\n  handleChange(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    })\n  };\n\n  render() {\n    return (\n      <div>\n        <div className = \"record-search-box\">\n          <h5>浏览保养记录</h5>\n          <Form.Group>\n            <Form.Label>门店</Form.Label>\n            <Form.Control as = \"select\" name = \"location_char\" defaultValue = \"\" onChange = {this.handleChange.bind(this)}>\n              <option value = \"\" disabled>【请选择】</option>\n              <option value = \"HD\">海拉尔河东</option>\n              <option value = \"H\">海拉尔河西</option>\n              <option value = \"M\">满洲里</option>\n              <option value = \"Y\">牙克石</option>\n            </Form.Control>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>开始时间</Form.Label>\n            <Form.Control type = \"date\" value = {this.state.start} name = \"start\" onChange = {this.handleChange.bind(this)}>\n            </Form.Control>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>结束时间</Form.Label>\n            <Form.Control type = \"date\" value = {this.state.end} name = \"end\" onChange = {this.handleChange.bind(this)}>\n            </Form.Control>\n          </Form.Group>\n          <Button variant = \"success\" onClick = {() => this.findRecordListBetweenDates(this.state.location_char, this.state.start, this.state.end)}>查看</Button>\n        </div>\n        {this.state.recordListData !== '' ? \n          <RecordBrowser recordListData = {this.state.recordListData}/>\n        : \"\"}\n      </div>\n    )\n  }\n}\n\nexport default RecentRecord;","import React, { Component } from 'react';\nimport { Button, ButtonGroup } from 'react-bootstrap';\n\nimport FindUser from './FindUser';\nimport NewUser from './NewUser';\nimport RecentRecord from './RecentRecord';\nimport axios from 'axios';\n\nclass Admin extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      action: 'recent_record',\n      giftData: [],\n      operatorData: [],\n      productData: [],\n    }\n  };\n\n  componentDidMount(){\n    this.getGiftData();\n    this.getOperatorData();\n    this.getProductData();\n  };\n\n  getGiftData(){\n    axios.get('https://api.hailarshell.cn/api/gift/all')\n      .then(res => {\n        this.setState({\n          giftData: res.data\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n  getOperatorData(){\n    axios.get('https://api.hailarshell.cn/api/operator/all')\n      .then(res => {\n        this.setState({\n          operatorData: res.data\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n  getProductData(){\n    axios.get('https://api.hailarshell.cn/api/product/all')\n      .then(res => {\n        this.setState({\n          productData: res.data\n        });\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  handleChange(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n      [name]: value\n    })\n  };\n\n  changeAction(action) {\n    this.setState({\n      action: action\n    })\n  }\n\n  render() {\n    return (\n      <div className = \"admin\">\n        <div className = \"nav-bar\">\n          <ButtonGroup style = {{ width: '600px', margin: '20px' }}>\n            <Button variant = \"secondary\" onClick = {() => this.changeAction('find_user')}>查找老用户</Button>\n            <Button variant = \"secondary\" onClick = {() => this.changeAction('new_user')}>创建新用户</Button>\n            <Button variant = \"secondary\" onClick = {() => this.changeAction('recent_record')}>浏览记录</Button>\n          </ButtonGroup>\n        </div>\n        { this.state.action === 'find_user' ? \n          <FindUser \n            giftData = {this.state.giftData}\n            productData = {this.state.productData}\n            operatorData = {this.state.operatorData}\n          /> \n          : \n          '' \n        }\n        { this.state.action === 'new_user' ? \n          <NewUser \n            changeAction = {this.changeAction.bind(this)}\n            admin = {this.props.admin}\n          /> \n        : '' }\n        { this.state.action === 'recent_record' ? \n          <RecentRecord \n            admin = {this.props.admin}\n          /> \n        : '' }\n      </div>\n    )\n  }\n}\n\nexport default Admin;","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport Login from './Components/Login';\nimport Admin from './Components/Admin';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      admin: {},\n      page: 'login'\n    }\n  }\n\n  setAdmin(data){\n    this.setState({\n      admin: data\n    })\n  };\n\n  handlePageChange(page){\n    this.setState({\n      page: page\n    })\n  }\n\n  componentDidMount(){\n    // let tcb = require('tcb-js-sdk');\n    // tcb.init({\n    //   env: 'hailar-shell-zb8lp'\n    // });\n    // let auth = tcb.auth();\n    // auth.weixinAuthProvider({\n    //   appid: 'wx1e21359edb78fd06',  //微信应用appid\n    //   scope: 'snsapi_login'     //网页授权类型\n    // })\n    //   .signIn()\n    //   .then(res => {\n    //     // 登录成功\n    //     console.log(res)\n        // let db = tcb.database();\n        // console.log(tcb)\n      // })\n      // .catch(err => {\n      //   // 登录失败\n      //   console.log(err)\n      // })\n      console.log('client initiated')\n  }\n\n  render() {\n    return (\n      <div className = \"app\">\n        <Header/>\n        {this.state.page === 'login' ? \n          <Login\n            setAdmin = {this.setAdmin.bind(this)}\n            handlePageChange = {this.handlePageChange.bind(this)}\n          />\n        : ''}\n        {this.state.page === 'admin' ? \n          <Admin\n            handlePageChange = {this.handlePageChange.bind(this)}\n            admin = {this.state.admin}\n          />\n        : ''}\n        <Footer/>\n      </div>\n    )\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}